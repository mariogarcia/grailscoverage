buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.11.6"
        classpath "org.grails.plugins:hibernate5:6.0.6"

        // REQUIRED DEPENDENCY FOR COBERTURA
        classpath 'net.saliman:gradle-cobertura-plugin:2.4.0'
    }
}

version "0.1"
group "grailscoverage"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

// COVERAGE PLUGINS
apply plugin:"jacoco"
apply plugin:"net.saliman.cobertura"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile project(':annotations')

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.2.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.2.Final"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.11.6"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"

    testCompile 'com.nagternal:spock-genesis:0.6.0'

    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
}

assets {
    minifyJs = true
    minifyCss = true
}

compileGroovy {
    groovyOptions.configurationScript = new File(projectDir, 'src/conf/compiler.groovy')
}

// JACOCO

test {
    jacoco {
        includeNoLocationClasses = false
    }
}

jacocoTestReport {
    reports {
        html {
            enabled true
        }
    }
    executionData = fileTree(dir: "$buildDir/jacoco")
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                     exclude: ['**/Application**',
                               '**/BootStrap**',
                               '**/UrlMappings**'])
        })
    }
}

// Future solution for any Groovy framework generating code
// https://github.com/jacoco/jacoco/issues/15

// COBERTURA

cobertura {
    coverageCheckHaltOnFailure=false
    coverageIgnoreTrivial = true
    coverageFormats = ['html', 'xml']
    coverageExcludes = ['.*Application.*',
                        '.*BootStrap.*',
                        '.*UrlMappings.*']

    coverageIgnoreMethodAnnotations = ['lombok.Generated']
}
